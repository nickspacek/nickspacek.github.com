{
  "name": "material-design-lite",
  "version": "1.0.0-3",
  "description": "Material Design Components in CSS, JS and HTML",
  "license": {
    "type": "Apache-2",
    "url": "https://github.com/google/material-design-lite/blob/master/LICENSE"
  },
  "author": {
    "name": "Google"
  },
  "homepage": "https://github.com/google/material-design-lite",
  "bugs": {
    "url": "https://github.com/google/material-design-lite/issues"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "readme": "# Material Design Lite\n\n> A library of [Material Design](http://www.google.com/design/spec/material-design/introduction.html) components in CSS, JS, and HTML\n\nMaterial Design Lite lets you add a Material Design look and feel to your static content websites. It doesnâ€™t rely on any JavaScript frameworks or libraries. Optimised for cross-device use, gracefully degrades in older browsers, and offers an experience that is accessible from the get-go.\n\n## Quick start\n\nFour quick start options are available:\n\n- [Download the latest release](https://github.com/google/material-design-lite/archive/master.zip).\n- Clone the repo: `git clone https://github.com/google/material-design-lite.git`.\n- Install with [Bower](http://bower.io): `bower install material-design-lite`.\n- Install with [npm](https://www.npmjs.org): `npm install material-design-lite`.\n\n### What's included\n\nWithin the download you'll find the following directories and files.\n\n| File/Folder | Provides |\n|-------------|----------|\n| bower.json | Bower package configuration. |\n| CONTRIBUTING.md | MDL contribution guidelines. |\n| docs |  Template files for documentation. |\n| gulpfile.js | gulp configuration for MDL. |\n| LICENSE | Project license information. |\n| package.json | NPM package information |\n| README.md | Details for quickly understanding the project. |\n| src | Source code for MDL. |\n| templates | Example templates |\n| test | Project test files. |\n\n## Browser Support\n\n| IE9 | IE10 | IE11 | Chrome | Opera | Firefox | Safari | Chrome (Android) | Mobile Safari |\n|-----|-----|------|--------|-------|---------|--------|------------------|---------------|\n| B   | A   | A    | A      | A      | A       | A      | A                | A             |\n\nA-grade browsers are fully supported. B-grade browsers will gracefully degrade to our CSS-only experience.\n\n## Getting Started\n\n### Download\n\nClone or\n[download](https://github.com/google/material-design-lite/archive/master.zip)\nthis repository, [build it](#development) and reference the following files in your project:\n\n```html\n<script src=\"dist/js/material.min.js\"></script>\n<link rel=\"stylesheet\" href=\"dist/css/material.min.css\">\n```\n\nYou will want to include the entire package to ensure optional assets like images or fonts are correctly\nincluded.\n\n### npm\n\n```\nnpm install --save material-design-lite\n```\n\n### bower\n\n```\nbower install --save material-design-lite\n```\n\n## Icons\n\nMaterial Design Lite uses the official [Material Icons font](https://www.google.com/design/icons/). We recommend you include it using:\n\n```\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n```\n\nYou can check for other options on the [Developer's Guide](http://google.github.io/material-design-icons/#icon-font-for-the-web).\n\nAll of the demos and templates in this project use the preferred ligature syntax:\n\n```\n<i class=\"material-icons\">face</i>\n```\n\nIf you need to support older browsers, take a look at the [Developer's Guide](http://google.github.io/material-design-icons/#icon-font-for-the-web) for\nhow to use codepoints instead, as well as the [list of supported codepoints](https://github.com/google/material-design-icons/blob/master/iconfont/codepoints).\n\n\n## Development\n\nThe sources (JS, Sass) and demo files for all components can be found in the `src` directory. To get started\nmodifying them, first install the necessary dependencies, from the root of the project:\n\n```\nnpm install && npm install -g gulp\n```\n\nNext, run the following one-liner to preview the components:\n\n```\ngulp serve\n```\n\nAny changes made to files inside the `src` directory will cause the page to reload. This page can also be loaded\nup on physical devices thanks to BrowserSync.\n\nTo build a production version of the components, run:\n\n```\ngulp\n```\n\nThis will clean the `dist` folder and rebuild the assets for serving.\n\n## Templates\n\nThe `templates/` subdirectory contains a few exemplary usages of MDL. Templates have their own, quasi-separate\ngulp pipeline and can be compiled with `gulp templates`. The templates use the vanilla MDL JS and\n[themed](http://google.github.io/material-design-lite/customizer/customizer.html) CSS files. Extraneous\nstyles are kept in a separate CSS file. Use `gulp serve` to take a look at the templates:\n\n* [General template](http://localhost:3000/templates/general)\n* [Blog template](http://localhost:3000/templates/blog) and [blog entry](http://localhost:3000/templates/blog/entry.html)\n* [Dashboard template](http://localhost:3000/templates/dashboard)\n* [Product template](http://localhost:3000/templates/product)\n\n> Templates are not officially supported in IE9 and legacy browsers that do not pass the minimum-requirements defined in our [cutting-the-mustard test](https://github.com/google/material-design-lite/blob/master/src/mdlComponentHandler.js#L256-269).\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Material Design Lite is maintained under [the Semantic Versioning guidelines](http://semver.org/). Sometimes we screw up, but we'll adhere to those rules whenever possible.\n\n## Feature requests\n\nIf you find MDL doesn't contain a particular component you think would be useful, please check the issue tracker in case work has already started on it. If not, you can request a [new component](https://github.com/Google/material-design-lite/issues/new?title=[Component%20Request]%20{Component}&body=Please%20include:%0A*%20Description%0A*%20Material%20Design%20Spec%20link%0A*%20Use%20Case%28s%29).\n\n## In-development\n\nHere, you can find early live previews of our work for testing or demo purposes.\n\n* [Visual tests](http://google.github.io/material-design-lite/test/visual/) for components\n* [Android.com](http://google.github.io/material-lite-samples/android-dot-com/) Material Design Lite demo\n* [Theme customiser prototype](http://google.github.io/material-design-lite/customizer/customizer.html)\n\n## Do you include any features that a framework comes with?\n\nMaterial Design Lite is focused on delivering a vanilla CSS/JS/HTML library of components. We are not a framework. If you are building a single-page app and require features like two-way data-binding, templating, CSS scoping and so forth, we recommend trying out the excellent [Polymer](http://polymer-project.org) project.\n\n\n## License\n\nCopyright Google, 2015. Licensed under an Apache-2 license.",
  "readmeFilename": "README.md",
  "_id": "material-design-lite@1.0.0-3",
  "_from": "material-design-lite@~1.0.0-3"
}
